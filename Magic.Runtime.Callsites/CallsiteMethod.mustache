// this file was generated by Magic.Runtime.Callsites -- do not edit it by hand!
using System;
using System.Reflection;

namespace Magic
{
    public class CallsiteInstanceMethod{{arityPadded}}
    {
        string MemberName;
        CallSiteCache{{arityPlusOnePadded}} cache;

        public CallsiteInstanceMethod{{arityPadded}}(string memberName)
        {
            MemberName = memberName;
            cache = new CallSiteCache{{arityPlusOnePadded}}();
        }

        public object Invoke(object target{{#subscripts}}, object arg{{.}}{{/subscripts}})
        {
            if(cache.TryGet(target{{#subscripts}}, arg{{.}}{{/subscripts}}, out var result))
                return result(target{{#subscripts}}, arg{{.}}{{/subscripts}});

            var method = (MethodInfo)Dispatch.BindToMethod(BindingFlags.Public | BindingFlags.Instance, target.GetType(), MemberName, new [] { {{#subscripts}}arg{{.}},{{/subscripts}} });
            if (method != null)
            {
                cache.CacheMethod(target{{#subscripts}}, arg{{.}}{{/subscripts}}, DelegateHelpers.GetMethodDelegate{{arityPlusOnePadded}}(method));
                return Dispatch.InvokeUnwrappingExceptions(method, target, new[] { {{#subscripts}}arg{{.}},{{/subscripts}} });
            }
            throw new ArgumentException($"Could not invoke instance member method `{MemberName}` on target {target.ToString()} ({target.GetType()}) with argument types{{#subscripts}} {arg{{.}}.GetType()},{{/subscripts}}.");
        }

    }
}