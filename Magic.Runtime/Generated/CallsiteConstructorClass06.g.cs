// this file was generated by Magic.Runtime.Callsites -- do not edit it by hand!
using System;
using System.Reflection;

namespace Magic
{
    public class CallsiteConstructor06<T>
    {
        CallSiteCache06 cache;

        public CallsiteConstructor06()
        {
            cache = new CallSiteCache06();
        }

        public T Invoke(object arg0,object arg1,object arg2,object arg3,object arg4,object arg5)
        {
            if(cache.TryGet(arg0,arg1,arg2,arg3,arg4,arg5, out var result))
                return (T)result(arg0,arg1,arg2,arg3,arg4,arg5);

            var ctor = Dispatch.BindToConstructor(typeof(T), new [] { arg0,arg1,arg2,arg3,arg4,arg5 });
            if (ctor != null)
            {
                var f = DelegateHelpers.GetMethodDelegate06(ctor);
                cache.CacheMethod(arg0,arg1,arg2,arg3,arg4,arg5, f);
                return (T)f(arg0,arg1,arg2,arg3,arg4,arg5);
            }
            throw new ArgumentException($"Could not invoke constructor `{typeof(T)}` with types {arg0.GetType()}, {arg1.GetType()}, {arg2.GetType()}, {arg3.GetType()}, {arg4.GetType()}, {arg5.GetType()}.");
        }
    }
}