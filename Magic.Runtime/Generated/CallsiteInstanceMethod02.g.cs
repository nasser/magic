// this file was generated by Magic.Runtime.Callsites -- do not edit it by hand!
using System;
using System.Reflection;

namespace Magic
{
    public class CallsiteInstanceMethod02
    {
        string MemberName;
        CallSiteCache03 cache;

        public CallsiteInstanceMethod02(string memberName)
        {
            MemberName = memberName;
            cache = new CallSiteCache03();
        }

        public object Invoke(object target, object arg0, object arg1)
        {
            if(cache.TryGet(target, arg0, arg1, out var result))
                return result(target, arg0, arg1);

            var method = Dispatch.BindToMethod(BindingFlags.Public | BindingFlags.Instance, target.GetType(), MemberName, new [] { arg0,arg1 });
            if (method != null)
            {
                cache.CacheMethod(target, arg0, arg1, DelegateHelpers.GetMethodDelegate03(method));
                var args = new[] { arg0,arg1 };
                Binder.Shared.ConvertArguments(method, args);
                return Dispatch.InvokeUnwrappingExceptions(method, target, args);
            }
            throw new ArgumentException($"Could not invoke instance member method `{MemberName}` on target {target.ToString()} ({target.GetType()}) with argument types {arg0.GetType()}, {arg1.GetType()}.");
        }

    }
}