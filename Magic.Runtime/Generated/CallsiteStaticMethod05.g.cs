// this file was generated by Magic.Runtime.Callsites -- do not edit it by hand!
using System;
using System.Reflection;

namespace Magic
{
    public class CallsiteStaticMethod05
    {
        Type Target;
        string MemberName;
        CallSiteCache05 cache;

        public CallsiteStaticMethod05(Type target, string memberName)
        {
            Target = target;
            MemberName = memberName;
            cache = new CallSiteCache05();
        }

        public object Invoke(object arg0,object arg1,object arg2,object arg3,object arg4)
        {
            if(cache.TryGet(arg0,arg1,arg2,arg3,arg4, out var result))
                return result(arg0,arg1,arg2,arg3,arg4);

            var method = Dispatch.BindToMethod(BindingFlags.Public | BindingFlags.Instance, Target, MemberName, new [] { arg0,arg1,arg2,arg3,arg4 });
            if (method != null)
            {
                var f = DelegateHelpers.GetMethodDelegate05(method);
                cache.CacheMethod(arg0,arg1,arg2,arg3,arg4, f);
                return f(arg0,arg1,arg2,arg3,arg4);
            }
            throw new ArgumentException($"Could not invoke static method `{MemberName}` on type {Target} with argument types {arg0.GetType()}, {arg1.GetType()}, {arg2.GetType()}, {arg3.GetType()}, {arg4.GetType()}.");
        }
    }
}