// this file was generated by Magic.Runtime.Callsites -- do not edit it by hand!
using System;
using System.Reflection;

namespace Magic
{
    public class CallsiteStaticMethod02
    {
        Type Target;
        string MemberName;
        CallSiteCache02 cache;

        public CallsiteStaticMethod02(Type target, string memberName)
        {
            Target = target;
            MemberName = memberName;
            cache = new CallSiteCache02();
        }

        public object Invoke(object arg0,object arg1)
        {
            if(cache.TryGet(arg0,arg1, out var result))
                return result(arg0,arg1);

            var method = (MethodInfo)Dispatch.BindToMethod(BindingFlags.Public | BindingFlags.Instance, Target, MemberName, new [] { arg0,arg1 });
            if (method != null)
            {
                cache.CacheMethod(arg0,arg1, DelegateHelpers.GetMethodDelegate02(method));
                var args = new[] { arg0,arg1 };
                Binder.Shared.ConvertArguments(method, args);
                return Dispatch.InvokeUnwrappingExceptions(method, null, args);
            }
            throw new ArgumentException($"Could not invoke static method `{MemberName}` on type {Target} with argument types {arg0.GetType()}, {arg1.GetType()}.");
        }
    }
}